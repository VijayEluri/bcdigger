<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bcdigger.admin.dao.MetaDefineDao">

	<sql id="table"> bcd_meta_define </sql>

	<resultMap id="BaseResultMap" type="metaDefine">
		<id property="id" column="id" jdbcType="BIGINT"/>
		<result property="defineName" column="define_name" jdbcType="VARCHAR"/>
		<result property="defineDesc" column="define_desc" jdbcType="VARCHAR"/>
		<result property="state" column="state" jdbcType="BIGINT"/>
		<result property="addTime" column="add_time" jdbcType="TIMESTAMP"/>
		<result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<sql id="base_column_list">
		id,define_name,define_desc,state, add_time, update_time
	</sql>
	
	<sql id="condition_sql">
	
		<if test=" id != null and id > 0 ">
			and id = #{id,jdbcType=BIGINT}
		</if>
		<if test="defineName != null and defineName !='' and like == 1 ">
			and chinese_name like concat('%',#{defineName,jdbcType=VARCHAR},'%')
		</if>
		<if test="defineName != null and defineName !='' and (like == null or like == 0)">
			and chinese_name = #{defineName,jdbcType=VARCHAR}
		</if>
		<if test=" state != null and state > -1 ">
			and state = #{state,jdbcType=BIGINT}
		</if>
	
		<!--<if test="beginDate != null and endDate != null and endDate !='' and beginDate != ''">
			and CREATE_TIME between #{beginDate} AND CONCAT(#{endDate},' 23:59:59')
		</if>
		<if test="beginOrderTime != null and beginOrderTime != '' and endOrderTime != null and endOrderTime !=''">
			and ORDER_TIME between #{beginOrderTime} AND CONCAT(#{endOrderTime},' 23:59:59')
		</if>

		<if test="merchantOrderNo != null and merchantOrderNo != ''"> and MERCHANT_ORDER_NO like CONCAT(CONCAT('%',#{merchantOrderNo,jdbcType=VARCHAR}), '%') </if>
		<if test="merchantNo != null and merchantNo != ''"> and MERCHANT_NO = #{merchantNo,jdbcType=VARCHAR}</if>
		<if test="merchantName != null and merchantName != ''"> and MERCHANT_NAME = #{merchantName,jdbcType=VARCHAR}</if>
		<if test="payerUserNo != null and payerUserNo != ''"> and PAYER_USER_NO = #{payerUserNo,jdbcType=VARCHAR}</if>
		<if test="payerName != null and payerName != ''"> and PAYER_NAME = #{payerName,jdbcType=VARCHAR}</if>
		<if test="orderIp != null and orderIp != ''"> and ORDER_IP = #{orderIp,jdbcType=VARCHAR}</if>
		<if test="orderOperatorLoginName != null and orderOperatorLoginName != ''"> and ORDER_OPERATOR_LOGIN_NAME = #{orderOperatorLoginName,jdbcType=VARCHAR}</if>

		<if test="orderFrom != null and orderFrom != ''"> and ORDER_FROM = #{orderFrom,jdbcType=SMALLINT}</if>
		<if test="orderFlag != null and orderFlag != ''"> and ORDER_FLAG = #{orderFlag,jdbcType=SMALLINT}</if>
		<if test="cur != null and cur != ''"> and CUR = #{cur,jdbcType=SMALLINT}</if>
		<if test="status != null and status != ''"> and STATUS = #{status,jdbcType=SMALLINT}</if>
		<if test="bizType != null and bizType != ''"> and BIZ_TYPE = #{bizType,jdbcType=SMALLINT}</if>
		<if test="paymentType != null and paymentType != ''"> and PAYMENT_TYPE = #{paymentType,jdbcType=SMALLINT}</if>

		<if test="payProductCode != null and payProductCode != ''"> and PAY_PRODUCT_CODE = #{payProductCode,jdbcType=VARCHAR}</if>
		<if test="payWayCode != null and payWayCode != ''"> and PAY_WAY_CODE = #{payWayCode,jdbcType=VARCHAR}</if>

		<if test="consigneeEmail != null and consigneeEmail != ''"> and CONSIGNEE_EMAIL = #{consigneeEmail,jdbcType=VARCHAR}</if>
		
		此处foreach中的条件用于分页查询，要用${item},不用#{item}
		<if test="paymentTypes != null and  paymentTypes !=''">
			and PAYMENT_TYPE in
			<foreach collection="paymentTypes" index="index" item="item" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>
		<if test="successTrxNo != null and successTrxNo != ''"> and SUCCESS_TRX_NO = #{successTrxNo,jdbcType=VARCHAR}</if>
		<if test="notBizType != null and notBizType != ''"> 
			<![CDATA[ and BIZ_TYPE <> #{notBizType,jdbcType=SMALLINT}]]>
		</if>
		<if test="trxModel != null and trxModel != ''"> and TRX_MODEL = #{trxModel,jdbcType=SMALLINT}</if> -->
	</sql>
	
	<insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="store">
		insert into
		<include refid="table" />
			(define_name,define_desc,state, add_time, update_time)
		values (#{defineName},#{defineDesc},#{state},#{now},#{now})
	</insert>
	
	<update id="update" parameterType="store">
		update
		<include refid="table" />
		<set>
			define_name = #{defineName},
			define_desc= #{defineDesc},
			state = #{state},
			update_time= #{now}
		</set>
		<where>
			id = #{id}
		</where>
	</update>
	
	<select id="getById" parameterType="Integer" resultMap="BaseResultMap">
		select <include refid="base_column_list" /> from
		<include refid="table" />
		where id = #{id}
	</select>
	
	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select <include refid="base_column_list" /> from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>
	
	<select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
		select <include refid="base_column_list" /> from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by id desc]]>
	</select>
	
	<select id="listStoreByCondation" parameterType="java.util.Map" resultMap="BaseResultMap">
		select <include refid="base_column_list" /> from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

</mapper>