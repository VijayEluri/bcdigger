<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bcdigger.goods.dao.GoodsPurchaseItemDao">

	<sql id="table"> bcd_goods_purchase_item </sql>

	<resultMap id="BaseResultMap" type="goodsPurchaseItem">
		<id property="id" column="id" jdbcType="BIGINT"/>
		<result property="purchaseId" column="purchase_id" jdbcType="BIGINT"/>
		<result property="goodsId" column="goods_id" jdbcType="BIGINT"/>
		<result property="goodsNo" column="goods_no" jdbcType="VARCHAR" />
		<result property="quantity" column="quantity" jdbcType="BIGINT"/>
		<result property="purPrice" column="pur_price" jdbcType="BIGINT"/>
		<result property="state" column="state" jdbcType="BIGINT"/>
	</resultMap>
	
	<resultMap type="goodsPurchaseItem" id="goodsStoreResultMap" extends="BaseResultMap">
		<!-- <result property="goodsName" column="goods_name" jdbcType="VARCHAR" />
		<result property="goodsNo" column="goods_no" jdbcType="VARCHAR" /> -->
	</resultMap>
	
	<sql id="base_column_list">
		id, purchase_id,goods_id,goods_no,quantity,pur_price,state
	</sql>
	
	<sql id="condition_sql">
	
		<if test="id != null">
			and id = #{id,jdbcType=BIGINT}
		</if>
		<if test="purchaseId != null and purchaseId !=0">
			and purchase_id = #{purchaseId,jdbcType=BIGINT}
		</if>
	</sql>
	
	<insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="GoodsInstore">
		insert into
		<include refid="table" />
		(purchase_id,goods_id,goods_no,quantity,pur_price,state)
		values (
			#{purchaseId},#{goodsId},#{goodsNo},#{quantity},#{purPrice},#{state}
		)
	</insert>
	
	<update id="update" parameterType="goods">
		update
		<include refid="table" />
		<set>
			purchase_id = #{purchaseId} ,
			goods_id = #{goodsId} ,
			goods_no = #{goodsNo} ,
			quantity = #{quantity} ,
			pur_price = #{purPrice} ,
			state = #{state}
		</set>
		<where>
			id = #{id}
		</where>
	</update>
	
	<select id="getById" parameterType="Integer" resultMap="BaseResultMap">
		select <include refid="base_column_list" /> from
		<include refid="table" />
		where id = #{id}
	</select>
	
	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select <include refid="base_column_list" /> from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>
	
	<select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
		select <include refid="base_column_list" /> from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by id desc]]>
	</select>


</mapper>