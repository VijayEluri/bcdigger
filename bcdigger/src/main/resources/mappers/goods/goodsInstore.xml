<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bcdigger.goods.dao.GoodsInstoreDao">

	<sql id="table"> bcd_goods_instore </sql>

	<resultMap id="BaseResultMap" type="goodsInstore">
		<id property="id" column="id" jdbcType="BIGINT"/>
		<result property="goodsId" column="goods_id" jdbcType="BIGINT"/>
		<result property="batchNo" column="batch_no" jdbcType="VARCHAR" />
		<result property="storeId" column="store_id" jdbcType="BIGINT"/>
		<result property="repositoryId" column="repository_id" jdbcType="BIGINT"/>
		<result property="state" column="state" jdbcType="BIGINT"/>
		<result property="purPrice" column="pur_price" jdbcType="BIGINT"/>
		<result property="type" column="type" jdbcType="BIGINT"/>
		<result property="inQuantity" column="in_quantity" jdbcType="BIGINT"/>
		<result property="inStoreTime"  column="in_store_time"  jdbcType="TIMESTAMP"/>
		<result property="operator" column="operator" jdbcType="BIGINT"/>
		<result property="memo" column="memo" jdbcType="VARCHAR" />
		<result property="sourceId" column="source_id" jdbcType="BIGINT"/>
	</resultMap>
	
	<resultMap type="goodsStore" id="goodsStoreResultMap" extends="BaseResultMap">
		<!-- <result property="goodsName" column="goods_name" jdbcType="VARCHAR" />
		<result property="goodsNo" column="goods_no" jdbcType="VARCHAR" /> -->
	</resultMap>
	
	<sql id="base_column_list">
		id, goods_id,batch_no,store_id,repository_id,state,pur_price,type,in_quantity,in_store_time,operator,memo,source_id
	</sql>
	
	<sql id="condition_sql">
	
		<if test="id != null">
			and id = #{id,jdbcType=BIGINT}
		</if>
		<if test="goodsId != null and goodsId !=0">
			and goods_id = #{goodsId,jdbcType=VARCHAR}
		</if>
		<if test="storeId != null and storeId !=0">
			and store_id = #{storeId,jdbcType=VARCHAR}
		</if>
	</sql>
	
	<insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="GoodsInstore">
		insert into
		<include refid="table" />
		(goods_id,batch_no,store_id,repository_id,state,pur_price,type,in_quantity,in_store_time,operator,memo,source_id)
		values (
			#{goodsId},#{batchNo},#{storeId},#{repositoryId},#{state},#{purPrice},#{type},#{inQuantity},now(),#{operator},#{memo},#{sourceId}
		)
	</insert>
	
	<update id="update" parameterType="goods">
		update
		<include refid="table" />
		<set>
			goods_id = #{goodsId} ,
			batch_no = #{batchNo} ,batch_no
			store_id = #{storeId} ,
			repository_id = #{repositoryId} ,
			state = #{state} ,
			pur_price = #{purPrice} ,
			type = #{type} ,
			in_quantity = #{inQuantity} ,
			in_store_time = #{inStoreTime} ,
			operator = #{operator} ,
			memo = #{memo} ,
			source_id = #{sourceId}
		</set>
		<where>
			id = #{id}
		</where>
	</update>
	
	<select id="getById" parameterType="Integer" resultMap="BaseResultMap">
		select <include refid="base_column_list" /> from
		<include refid="table" />
		where id = #{id}
	</select>
	
	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select <include refid="base_column_list" /> from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>
	
	<select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
		select <include refid="base_column_list" /> from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by id desc]]>
	</select>


</mapper>